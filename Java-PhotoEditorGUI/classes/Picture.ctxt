#BlueJ class context
comment0.target=Picture
comment0.text=\r\n\ A\ class\ that\ represents\ a\ picture.\ \ This\ class\ inherits\ from\ \r\n\ SimplePicture\ and\ allows\ the\ student\ to\ add\ functionality\ to\r\n\ the\ Picture\ class.\ \r\n\ based\ on\ work\ by\ Barbara\ Ericson\ ericson@cc.gatech.edu\r\n\ \r\n\ @author\ Anthony\ Rubick\r\n
comment1.params=
comment1.target=Picture()
comment1.text=\r\n\ Constructor\ that\ takes\ no\ arguments\ \r\n
comment10.params=colorToReplace\ colorToSet\ tolerance
comment10.target=void\ replaceColorWithColor(java.awt.Color,\ java.awt.Color,\ int)
comment10.text=\r\n\ relaceColorWithColor,\ parses\ the\ picture,\ setting\ all\ pixels\ of\ the\ passed\ colorToReplace\ to\ the\ passed\ colorToSet\r\n\ @param\ colorToReplace\ the\ color\ to\ replace\r\n\ @param\ colorToSet\ the\ color\ to\ replace\ with\r\n\ @param\ tolerance\ (FUTURE)\ will\ allow\ the\ user\ to\ set\ a\ tolerance,\ replacing\ all\ colors\ within\ this\ distance\ of\ colorToReplace\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment12.params=
comment12.target=void\ zeroBlue()
comment12.text=Method\ to\ set\ the\ blue\ to\ 0
comment13.params=
comment13.target=void\ mirrorVertical()
comment13.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ left\ to\ right
comment14.params=
comment14.target=void\ mirrorTemple()
comment14.text=Mirror\ just\ part\ of\ a\ picture\ of\ a\ temple
comment15.params=fromPic\ startRow\ startCol
comment15.target=void\ copy(Picture,\ int,\ int)
comment15.text=\ copy\ from\ the\ passed\ fromPic\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ startRow\ the\ start\ row\ to\ copy\ to\r\n\ @param\ startCol\ the\ start\ col\ to\ copy\ to\r\n
comment16.params=
comment16.target=void\ createCollage()
comment16.text=Method\ to\ create\ a\ collage\ of\ several\ pictures
comment17.params=edgeDist
comment17.target=void\ edgeDetection(int)
comment17.text=\ Method\ to\ show\ large\ changes\ in\ color\ \r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment18.params=args
comment18.target=void\ main(java.lang.String[])
comment18.text=\ Main\ method\ for\ testing\ -\ each\ class\ in\ Java\ can\ have\ a\ main\ \r\n\ method\ \r\n
comment19.params=
comment19.target=void\ keepOnlyBlue()
comment19.text=Method\ to\ set\ red\ and\ green\ to\ zero
comment2.params=fileName
comment2.target=Picture(java.lang.String)
comment2.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\ \r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment20.params=
comment20.target=void\ negate()
comment20.text=method\ to\ set\ all\ rgb\ values\ to\ 255\ -\ that\ rgb\ value
comment21.params=
comment21.target=void\ mirrorVerticalRightToLeft()
comment21.text=\r\n\ \ mirrors\ a\ picture\ around\ a\ mirror\r\n\ \ placed\ vertically\ from\ right\ to\ left.\r\n
comment22.params=
comment22.target=void\ mirrorHorizontal()
comment22.text=\r\n\ \ mirrors\ a\ picture\ around\ a\ mirror\r\n\ \ placed\ horizontally\ from\ top\ to\ bottom.\r\n
comment23.params=
comment23.target=void\ mirrorHorizontalBotToTop()
comment23.text=\r\n\ \ mirrors\ a\ picture\ around\ a\ mirror\r\n\ \ placed\ horizontally\ from\ bottom\ to\ top.\r\n
comment24.params=
comment24.target=void\ mirrorArms()
comment24.text=\r\n\ mirror\ the\ arms\ on\ the\ snowman\ (\u201Csnowman.jpg\u201D)\ to\r\n\ make\ a\ snowman\ with\ 4\ arms.\r\n
comment25.params=
comment25.target=void\ mirrorGull()
comment25.text=\r\n\ mirror\ the\ seagull\ (\u201Cseagull.jpg\u201D)\ to\ the\ right\ so\r\n\ that\ there\ are\ two\ seagulls\ on\ the\ beach\ near\ each\ other\r\n
comment26.params=fromPic\ startRow\ startCol\ endRow\ endCol
comment26.target=void\ copy2(Picture,\ int,\ int,\ int,\ int)
comment26.text=\ copy\ from\ the\ passed\ fromPic\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ startRow\ the\ start\ row\ to\ copy\ to\r\n\ @param\ startCol\ the\ start\ col\ to\ copy\ to\r\n\ @param\ endRow\ the\ end\ row\ to\ copy\ to\r\n\ @param\ endCol\ the\ end\ col\ to\ copy\ to\r\n
comment27.params=
comment27.target=void\ myCollage()
comment27.text=Method\ to\ create\ a\ collage\ of\ several\ pictures
comment28.params=edgeDist\ runs
comment28.target=void\ edgeDetection2(int,\ int)
comment28.text=\ Method\ to\ show\ large\ changes\ in\ color\r\n\ hopefully\ more\ efficient\r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment29.params=edgeDist
comment29.target=void\ bolden(int)
comment29.text=\ Method\ to\ show\ large\ changes\ in\ color\r\n\ made\ for\ making\ light\ writing\ show\ up\ better\ on\ a\ plain\ background\r\n\ this\ method\ should\ fill\ in\ lines\r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment3.params=height\ width
comment3.target=Picture(int,\ int)
comment3.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n
comment30.params=
comment30.target=void\ bolden2()
comment30.text=\ Method\ to\ show\ large\ changes\ in\ color\r\n\ made\ for\ making\ light\ writing\ show\ up\ better\ on\ a\ plain\ background\r\n\ this\ method\ should\ fill\ in\ lines\r\n\ sets\ up\ and\ handles\ bolden2Iter\r\n
comment31.params=pixels\ edgeDist\ i\ bestEdgeDist\ bestEdgeDiff\ lastEdgeDist\ lastEdgeDiff\ x
comment31.target=void\ bolden2Iter(Pixel[][],\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment31.text=\ \r\n\ Method\ to\ show\ large\ changes\ in\ color\r\n\ made\ for\ making\ light\ writing\ show\ up\ better\ on\ a\ plain\ background\r\n\ should\ try\ and\ find\ an\ optimal\ tolerance\ for\ the\ user\r\n\ this\ method\ should\ fill\ in\ lines\r\n\ \r\n\ iterates\ to\ find\ the\ best\ tolerance\r\n\ should\ only\ ever\ be\ called\ in\ bolden2\r\n\ \r\n\ @param\ pixels\ the\ pixels\ for\ it\ to\ analyze\r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n\ @param\ i\ iterations,\ used\ to\ prevent\ infinite\ loops\r\n\ @param\ bestEdgeDist\ the\ value\ for\ edgeDist\ that,\ as\ of\ now,\ has\ produced\ the\ best\ results\r\n\ @param\ bestEdgeDiff\ the\ difference\ bewteen\ forground\ and\ background\ pixels\ in\ the\ best\ edge\r\n\ @param\ lastEdge\ the\ last\ edgeDist\ used\r\n\ @param\ lastDiff\ the\ difference\ resulting\ from\ the\ lastEdge\ \r\n
comment32.params=
comment32.target=java.lang.String\ getExtension()
comment32.text=small\ hack,\ lets\ Picture\ use\ the\ getExtension\ method\ from\ SimplePicture
comment4.params=copyPicture
comment4.target=Picture(Picture)
comment4.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\ \r\n\ copy\ of\ that\ picture\r\n\ @param\ copyPicture\ the\ picture\ to\ copy\r\n
comment5.params=image
comment5.target=Picture(java.awt.image.BufferedImage)
comment5.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment6.params=removeRed\ removeGreen\ removeBlue
comment6.target=void\ removeColorChannels(boolean,\ boolean,\ boolean)
comment6.text=\r\n\ remove,\ remove\ one\ or\ more\ color\ channels\ by\ setting\ the\ values\ to\ 0\r\n\ @param\ removeRed\ whether\ or\ not\ to\ remove\ Red\r\n\ @param\ removeGreen\ whether\ or\ not\ to\ remove\ Green\r\n\ @param\ removeBlue\ whether\ or\ not\ to\ remove\ Blue\r\n
comment7.params=color\ min\ max
comment7.target=void\ trimColor(int,\ int,\ int)
comment7.text=\r\n\ Trim,\ trims\ a\ color\ channel\ to\ be\ in\ between\ the\ passed\ min\ and\ max\ values\r\n\ @param\ color\ an\ integer\ representing\ the\ color\ to\ be\ trimmed\ (0\ \=\ red;\ 1\ \=\ green;\ 2\ \=\ blue)\r\n\ @param\ min\ the\ minimum\ value,\ any\ color\ values\ below\ this\ will\ be\ increased\ to\ this\ value\r\n\ @param\ max\ the\ maximum\ value,\ any\ color\ values\ above\ this\ will\ be\ decreased\ to\ this\ value\r\n
comment8.params=negateRed\ negateGreen\ negateBlue
comment8.target=void\ negateColorChannels(boolean,\ boolean,\ boolean)
comment8.text=\r\n\ Negate,\ negates\ one\ or\ more\ color\ channels\ by\ setting\ the\ values\ to\ 255\ -\ current\ value\r\n\ @param\ negateRed\ whether\ or\ not\ to\ negate\ Red\r\n\ @param\ negateGreen\ whether\ or\ not\ to\ negate\ Green\r\n\ @param\ negateBlue\ whether\ or\ not\ to\ negate\ Blue\r\n
comment9.params=
comment9.target=void\ grayscale()
comment9.text=\ \r\n\ method\ to\ put\ the\ image\ in\ grayscale\ by\ setting\ the\ red\ green\ and\ blue\ values\ to\ the\ average\ of\ the\ 3\r\n
numComments=33
